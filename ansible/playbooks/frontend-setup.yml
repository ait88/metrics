---
- name: Set up Frontend Component
  hosts: frontend
  become: true
  vars_files:
    - ../vars/main.yml
    - ../vars/secrets.yml

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
          - ufw
          - wireguard
          - python3-pip
        state: present

    - name: Add Docker repository key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Install Docker Compose
      pip:
        name: docker-compose
        state: present

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Configure firewall
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: "{{ 'udp' if item == '51820' else 'tcp' }}"
      loop:
        - "22"
        - "80"
        - "443"
        - "51820"

    - name: Enable UFW
      ufw:
        state: enabled
        policy: deny

    - name: Create directories
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      loop:
        - "/opt/metrics/docker"
        - "/opt/metrics/docker/prometheus"
        - "/opt/metrics/docker/blackbox-exporter"
        - "/opt/metrics/wireguard"

    - name: Generate WireGuard private key
      shell: wg genkey
      register: wireguard_private_key
      changed_when: false
      when: wireguard_private_key is not defined

    - name: Generate WireGuard public key
      shell: echo "{{ wireguard_private_key.stdout }}" | wg pubkey
      register: wireguard_public_key
      changed_when: false
      when: wireguard_private_key is not defined

    - name: Configure WireGuard
      template:
        src: ../roles/wireguard/templates/wg0.conf.j2
        dest: /opt/metrics/wireguard/wg0.conf
        owner: root
        group: root
        mode: 0600

    - name: Enable WireGuard
      copy:
        content: |
          [Unit]
          Description=WireGuard interface wg0
          After=network.target

          [Service]
          Type=oneshot
          ExecStart=/usr/bin/wg-quick up /opt/metrics/wireguard/wg0.conf
          ExecStop=/usr/bin/wg-quick down /opt/metrics/wireguard/wg0.conf
          RemainAfterExit=yes

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/wg-quick@wg0.service
        owner: root
        group: root
        mode: 0644

    - name: Start and enable WireGuard
      systemd:
        name: wg-quick@wg0
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Copy Docker Compose files
      template:
        src: "../roles/frontend/templates/{{ item.src }}"
        dest: "/opt/metrics/docker/{{ item.dest }}"
        owner: root
        group: root
        mode: 0644
      loop:
        - { src: "docker-compose.yml.j2", dest: "docker-compose.yml" }
        - { src: "prometheus.yml.j2", dest: "prometheus/prometheus.yml" }
        - { src: "blackbox.yml.j2", dest: "blackbox-exporter/blackbox.yml" }
        - { src: ".env.j2", dest: ".env" }

    - name: Start Docker Compose services
      shell: cd /opt/metrics/docker && docker-compose up -d
      args:
        executable: /bin/bash
      register: docker_compose_result
      changed_when: "'Creating' in docker_compose_result.stdout or 'Starting' in docker_compose_result.stdout"

    - name: Output connection information
      debug:
        msg:
          - "Frontend setup completed successfully."
          - "WireGuard Public Key: {{ wireguard_public_key.stdout }}"
          - "Frontend IP: {{ ansible_host }}"
